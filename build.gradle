buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins { 
	id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.32"
	id "com.matthewprenger.cursegradle" version "1.0.9"
}

apply plugin: 'net.minecraftforge.gradle.forge'


version = version_major + '.' + version_minor + '.' + version_patch
group = "de.heisluft"
archivesBaseName = "egm"+ mcversion

if(System.getenv().BUILD_NUMBER != null) { 
	version += "-build_${System.getenv().BUILD_NUMBER}"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = mcversion + "-" + forgeversion
    runDir = "run"
    replace '@VERSION@', project.version
    mappings = mcp_mappings
}

repositories { 

}

dependencies {
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'
	testCompile 'junit:junit:4.12'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    rename '(.+_at.cfg)', 'META-INF/$1'
}

all {
	tasks.withType(Javadoc) { 
		options.addStringOption('Xdoclint:none', '-quiet')
	}
}

jar {
	manifest {
		//attributes 'FMLAT': 'egm_at.cfg'
	}
	from sourceSets.main.output
	from sourceSets.api.output
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allJava
	from sourceSets.api.allJava
}

task apiJar(type: Jar) {
	classifier = 'api'
	from sourceSets.api.output
	// TODO: when FG bug is fixed, remove allJava from the api jar.
	// https://github.com/MinecraftForge/ForgeGradle/issues/369
	// Gradle should be able to pull them from the -sources jar.
	from sourceSets.api.allJava
}

artifacts {
	sourcesJar
	javadocJar
	apiJar
}

task("uploadFiles", dependsOn: "build") { 
	description = "upload JARs"
	if(project.hasProperty("local_maven")) { 
		apply plugin: 'maven'
		uploadArchives { 
			repositories.mavenDeployer { 
				repository(url: "file://${local_maven}") { 
					authentication(userName: maven_user, password: maven_password)
				}
				pom.version = version
				pom.artifactId = archivesBaseName
				pom.groupId = group
			}
		}
	}
}